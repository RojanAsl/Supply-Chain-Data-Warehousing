SELECT 
    COALESCE(CAST(t.month AS VARCHAR), 'All months') AS month,
    COALESCE(p.category_name, 'All categories') AS category,
    AVG(o.discount) AS avg_discount_per_item_sold,
    AVG(o.order_item_total) AS avg_revenue_per_item_sold,
    AVG(o.profit_ratio * o.order_item_total) AS avg_profit_per_item_sold,
    COALESCE((AVG(o.discount) - LAG(AVG(o.discount)) OVER (PARTITION BY p.category_name ORDER BY t.month)) / AVG(o.discount) * 100, 0) AS discount_variation_percentage,
    COALESCE((AVG(o.order_item_total) - LAG(AVG(o.order_item_total)) OVER (PARTITION BY p.category_name ORDER BY t.month)) / AVG(o.order_item_total) * 100, 0) AS revenue_variation_percentage,
    COALESCE((AVG(o.profit_ratio * o.order_item_total) - LAG(AVG(o.profit_ratio * o.order_item_total)) OVER (PARTITION BY p.category_name ORDER BY t.month)) / AVG(o.profit_ratio * o.order_item_total) * 100, 0) AS profit_variation_percentage
FROM 
    order_items o 
    JOIN product p USING (product_id)
    JOIN time t ON t.time_id=o.order_time_id
GROUP BY 
    CUBE(p.category_name, t.month)
HAVING 
    AVG(o.discount) IS NOT NULL 
    AND AVG(o.order_item_total) IS NOT NULL
    AND AVG(o.profit_ratio * o.order_item_total) IS NOT NULL
ORDER BY 
    category, month DESC